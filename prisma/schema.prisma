generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl"]
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_PRISMA_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String      @id @default(cuid())
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  accounts      Account[]
  savedPaths    SavedPath[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model SavedPath {
  id        String   @id @default(cuid())
  title     String
  data      Json
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Node {
  id        String     @id @default(cuid())
  title     String
  content   String
  depth     Int
  lens      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  sources   Source[]
  conflicts Conflict[] @relation("ConflictNodes")
  Node_A    Node[]     @relation("NodeConnections")
  Node_B    Node[]     @relation("NodeConnections")
}

model Source {
  id        String   @id @default(cuid())
  url       String
  title     String?
  nodeId    String
  createdAt DateTime @default(now())
  node      Node     @relation(fields: [nodeId], references: [id])
}

model Conflict {
  id          String   @id @default(cuid())
  description String
  createdAt   DateTime @default(now())
  nodes       Node[]   @relation("ConflictNodes")
}
